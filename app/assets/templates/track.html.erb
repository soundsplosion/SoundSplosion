<!-- X (delete) icon made by <a href="http://appzgear.com" title="Appzgear">Appzgear</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a>. Licensed under <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0</a> -->
<template>
	<style>
		#container{
			position: relative;
			top: 5px;
			background: #243544;
			width: 200px;
			height: 60px;
			text-align: center;
			padding-top: 10px;
		}
		#checkboxes{
			color: #FFF;
			opacity: 0.9;
		}
		.tb_button {
			-webkit-filter: invert(100%);
			float: right;
			opacity: 0.75;
			position: relative;
			top: -5px;
			left: -3px;
		}
		.tb_button:hover{
			opacity: 1.0;
		}
	</style>
	<div id="container">
		<div id="deletediv"><img class="tb_button" id="delete" src="<%= asset_path("delete_box.png")%>" width="15" height="15" alt="Delete Track" /></div>
		<div><denoto-editabletext id="trackname" value="[Double-click to enter name]"></denoto-editabletext></div>
		<div id="checkboxes">Mute <input type="checkbox" id="mute"></input> Solo <input type="checkbox" id="solo"></input></div>
	</div>
</template>
<link rel="import" href="<%= asset_path("editabletext.html")%>">

<script>
	(function(){
		// get the template for this element
		var template = document.currentScript.ownerDocument.querySelector('template');

		// copy a prototype from HTMLElement
		var trackPrototype = Object.create(HTMLElement.prototype);

		(function(){

		var root;
		var track_object;
			// specify the created callback ("constructor")
			trackPrototype.createdCallback = function(){
				root = this.createShadowRoot();
				root.appendChild(document.importNode(template.content, true));
				track_object = {id: undefined, index: undefined};

				root.getElementById("trackname").addEventListener('editabletext-changed', function(){
					rhomb._song._tracks[track_object.index]._name = event.detail.value;
				});

				root.getElementById("delete").addEventListener('mouseup', function(){
					var deleteThis = confirm("This will permanently delete the track and associated pattern timings.");
					if(deleteThis){
						var deleteEvent = new CustomEvent('denoto-deletetrack', {"detail": {"div": root.host, "track": track_object}});
						document.dispatchEvent(deleteEvent);
					}
				});
			};

			trackPrototype.attributeChangedCallback = function(attrName, oldVal, newVal){
				if(attrName === "name"){
					if(newVal !== "Default Track Name")
						root.getElementById("trackname").setAttribute("value", newVal);
				} else if(attrName === "id")
					track_object.id = newVal;
				else if(attrName === "index")
					track_object.index = newVal;
			};

			trackPrototype.detachedCallback = function(){
				
			};
		})();

		// register the element
		var track = document.registerElement('denoto-track', {prototype: trackPrototype});
	})();
</script>