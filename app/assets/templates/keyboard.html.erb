<template>
  <link rel="import" href="<%= asset_path("whitekey.html")%>">
  <link rel="import" href="<%= asset_path("blackkey.html")%>">
  <div id="keyboard"></div>
  <style>
  *{
    padding: 0;
    margin: 0;  
  }
  #keyboard {
    float: left;
    width: 100px;
    padding: 0px;
    position: relative;
  }
  .pianokey {
    padding: 0px;
    margin: 0px;
  }
 </style>
</template>
<script>
  (function(){
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var keyboardPrototype = Object.create(HTMLElement.prototype);

    // specify the created callback ("constructor")
    keyboardPrototype.createdCallback = function(){
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      var count = this.getAttribute('keycount');
      if(count !== null){
        createKeys(this, count);
      }
    };

    // specify the "an attribute has changed" callback
    keyboardPrototype.attributeChangedCallback = function(attrName, oldVal, newVal){
      if(attrName === "keycount"){
        createKeys(this, newVal);
      }
    };

    // helper function to create the keys in the shadow div
    function createKeys(that, count){
      var max = parseInt(count);  
      var heightoffset = -1;
      var key;
      
      for(var i = 0; i < max; i++){
        var mod = i % 12;

        // handle the gaps where there are no black keys
        if(mod === 8 || mod === 1){
          heightoffset++;
        }

        // create keys in a piano pattern
        if(mod === 2 || mod === 4 || mod === 6 || mod === 9 || mod === 11){
          key = document.createElement('denoto-pianokey-black');
        key.setAttribute('style', "position: absolute; left: 0px; top: " + (i + heightoffset) * 19.7 + "px; z-index: 2;");
        } else {
          key = document.createElement('denoto-pianokey-white');
        key.setAttribute('style', "position: absolute; left: 0px; top: " + (i + heightoffset) * 19.7 + "px; z-index: 1;");
        }

        // Shift the key value up by 35 to put the keyboard into a more useful range
        key.setAttribute('value', max - i + 35);
        that.shadowRoot.getElementById('keyboard').appendChild(key);
      }

      // use the bottom coordinates of the last key to set the height of the keyboard
      that.shadowRoot.host.style.height = (parseInt(key.style.top) + 40) + "px";
    }

    // register the element
    var keyboard = document.registerElement('denoto-keyboard', {prototype: keyboardPrototype});
  })();
</script>