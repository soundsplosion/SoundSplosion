<template>
  <style>
    #container
    {
      -webkit-user-drag: none;
    }
    #up
    {
      display: block;
      -webkit-user-drag: none;
    }
    #down
    {
      display: none;
      -webkit-user-drag: none;
    }
    #noteValue{
      position: absolute;
      right: 10px;
      top: 27%;
      display: none;
      -webkit-user-select: none;
      cursor: default;
    }
  </style>
  <div id="container">
    <img id="up" src='<%= asset_path("whitekey_up.png")%>' />
    <img id="down" src='<%= asset_path("whitekey_down.png")%>' />
    <div id="noteValue"></div>
  </div>
</template>

<script>
(function() {
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var whitekeyPrototype = Object.create(HTMLElement.prototype);

    // specify the created callback ("constructor")
    whitekeyPrototype.createdCallback = function() {
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));
      var key = this;
      var container = root.getElementById("container");

      var val_display = root.getElementById("noteValue");
      val_display.addEventListener("mousedown", function(){ event.preventDefault(); }); // stop I-bar cursor from appearing on the value display
      val_display.addEventListener("mouseover", function(){ event.preventDefault(); }); // stop I-bar cursor from appearing on the value display

      // keep track of whether or not this key has been clicked
      var clicked = false;
      var up = root.getElementById("up");
      var down = root.getElementById("down");

      // make the key shade when moused over
      container.addEventListener('mouseover', function() {
        up.style.display = "none";
        down.style.display = "block";
      });

      // make the key unshade when moused out of
      container.addEventListener('mouseout', function() {
        if (clicked) {
          var keyEvent = new CustomEvent("denoto-keyup", {"detail":{"keyvalue": key.getAttribute('value')}}); document.dispatchEvent(keyEvent);
          clicked = false;
        }
        up.style.display = "block";
        down.style.display = "none";
       });

      // make the key react when clicked on
      container.addEventListener('mousedown', function() { clicked = true; var keyEvent = new CustomEvent("denoto-keydown", {"detail":{"keyvalue": key.getAttribute('value')}}); document.dispatchEvent(keyEvent); });
      container.addEventListener('mouseup', function() {
        if (clicked) {
          var keyEvent = new CustomEvent("denoto-keyup", {"detail":{"keyvalue": key.getAttribute('value')}}); document.dispatchEvent(keyEvent);
          clicked = false;
        }
      });
    };

    whitekeyPrototype.attributeChangedCallback = function(attrName, oldVal, newVal) {
      var that = this;
      var root = that.shadowRoot;
      if(attrName.toLowerCase() === "value"){
        var val = parseInt(newVal);
        if(val % 12 === 0 || val === 127){
          var val_display = root.getElementById("noteValue");
          val_display.innerText = val;
          val_display.style.display = "block";
        }
      }
    };

    // register the element
    var whitekey = document.registerElement('denoto-pianokey-white', {prototype: whitekeyPrototype});
  })();
</script>
