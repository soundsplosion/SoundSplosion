<template>
	<style>
		#container{
			position: relative;
			top: 5px;
			background: #243544;
			width: 200px;
			height: 60px;
			text-align: center;
			padding-top: 5px;
			margin-left: auto;
			margin-right: auto;
		}
		#colorbox{
			width: 100px;
			height: 30px;
			margin-left: auto;
			margin-right: auto;
			background: #6666AA;
			position: relative;
			top: 3px;
		}

	</style>
	<div id="container">
		<div><denoto-editabletext id="patternname" value="[Double-click to enter name]"></denoto-editabletext></div>
		<div id="colorbox"></div>
	</div>
</template>
<link rel="import" href="<%= asset_path("editabletext.html")%>">

<script>
	(function(){
		// get the template for this element
		var template = document.currentScript.ownerDocument.querySelector('template');

		// copy a prototype from HTMLElement
		var patternPrototype = Object.create(HTMLElement.prototype);

		(function(){

			var pattern_val = {Xoffset: 14, color: "#6666AA", isValid: true, outlinecolor: "#000000", tickstart: 0, trackIndex: 0};
			var root;

			// specify the created callback ("constructor")
			patternPrototype.createdCallback = function(){
				root = this.createShadowRoot();
				root.appendChild(document.importNode(template.content, true));

				var container = root.getElementById("container");
				container.addEventListener('mousedown', function(){
					event.preventDefault();
					var patternEvent = new CustomEvent("denoto-previewpattern", {"detail": pattern_val});
					document.dispatchEvent(patternEvent);
				});

				var color = this.getAttribute("color");
				if(typeof color !== 'undefined' && color !== null){
					root.getElementById("colorbox").style.background = color;
					pattern_val.color = color;
				}

				var duration = parseInt(this.getAttribute("duration"));
				if(duration > 0){
					pattern_val.tickduration = duration;
					console.log(duration);
				} else {
					pattern_val.tickduration = 1920;
				}

				var id = parseInt(this.getAttribute("id"));
				if(id !== 0){
					pattern_val.ID = id;
				}

				var name = this.getAttribute("value");
				if(typeof name !== 'undefined' && name !== null)
					root.getElementById("patternname").setAttribute("value", name);
			};

			patternPrototype.attributeChangedCallback = function(attrName, oldVal, newVal){
				if(attrName === "color"){
					root.getElementById("colorbox").style.background = newVal;
					pattern_val.color = newVal;
				} else if(attrName === "duration"){
					if(parseInt(newVal) > 0)
						pattern_val.tickduration = parseInt(newVal);
				} else if(attrName === "id"){
					pattern_val.ID = newVal;
				} else if(attrName === "value"){
					root.getElementById("patternname").setAttribute("value", newVal);
				}
			};
		})();

		// register the element
		var pattern = document.registerElement('denoto-pattern', {prototype: patternPrototype});
	})();
</script>