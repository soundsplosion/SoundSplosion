<template>
	<span id="duration">
		End Marker: <denoto-editabletext id="max_measure" type="tinytext" value="4"></denoto-editabletext>
		.<denoto-editabletext id="max_beat" type="tinytext" value="0"></denoto-editabletext>
		.<denoto-editabletext id="max_q_beat" type="tinytext" value="0"></denoto-editabletext>
		.<denoto-editabletext id="max_tick" type="shorttext" value="0"></denoto-editabletext>
	</span>
	<style>
		#duration{
			opacity: 0.9;
			position: relative;
			top: 10px;
		}
	</style>
</template>

<script>
	(function(){
		// get the template for this element
		var template = document.currentScript.ownerDocument.querySelector('template');

		// declare persistent references to the fields
		var max_measure, max_beat, max_q_beat, max_tick;

		// copy a prototype from HTMLElement
		var durationPrototype = Object.create(HTMLElement.prototype);

		// specify the created callback ("constructor")
		durationPrototype.createdCallback = function(){
			var root = this.createShadowRoot();
			root.appendChild(document.importNode(template.content, true));

			// initialize end time
			max_measure = root.querySelector("#max_measure");
			max_beat = root.querySelector("#max_beat");
			max_q_beat = root.querySelector("#max_q_beat");
			max_tick = root.querySelector("#max_tick");
			max_measure.value = 4;
			max_beat.value = 0;
			max_q_beat.value = 0;
			max_tick.value = 0;

			root.host.addEventListener('denoto-setendtime', function(){
				max_measure.setAttribute("value", event.detail.measure);
				max_beat.setAttribute("value", event.detail.beat);
				max_q_beat.setAttribute("value", event.detail.quarter_beat);
				max_tick.setAttribute("value", event.detail.tick);
			});

			max_measure.addEventListener('keyup', function(){
				if(event.keyCode == 13){
					// TODO: sanitize inputs
					var input = parseInt(event.srcElement.value);
					// rhomb.set end time here
				}
			});

			max_beat.addEventListener('keyup', function(){
				if(event.keyCode == 13){
					// TODO: sanitize inputs
					var input = parseInt(event.srcElement.value);
					// rhomb.set end time here
				}
			});

			max_q_beat.addEventListener('keyup', function(){
				if(event.keyCode == 13){
					// TODO: sanitize inputs
					var input = parseInt(event.srcElement.value);
					// rhomb.set end time here
				}
			});

			max_tick.addEventListener('keyup', function(){
				if(event.keyCode == 13){
					// TODO: sanitize inputs
					var input = parseInt(event.srcElement.value);
					// rhomb.set end time here
				}
			});
		};

		// register the element
		var duration = document.registerElement('denoto-duration', {prototype: durationPrototype});
	})();
</script>