<template>
  <div id="quantizationcontrol">
    Snap <input id="snapto" type="checkbox" checked></input>
    <!--Quantization: <denoto-editabletext id="quantization" type="tinytext" prefix="1/" value="16" suffix=" Note"></denoto-editabletext>-->
    Insert Quantize: 
    <select id="quantization">
      <option value="0">1/1</option>
      <option value="1">1/2</option>
      <option value="2">1/4</option>
      <option value="3">1/8</option>
      <option value="4" selected="selected">1/16</option>
      <option value="5">1/32</option>
      <option value="6">1/64</option>
      <option value="7">1/128</option>
      <option value="8">1/4 T</option>
      <option value="9">1/8 T</option>
      <option value="10">1/16 T</option>
      <option value="11">1/32 T</option>
      <option value="12">1/64 T</option>
    </select>
    Length Quantize: 
    <select id="length-quantize">
      <option value="0">Insert</option>
      <option value="1">1/2</option>
      <option value="2">1/4</option>
      <option value="3">1/8</option>
      <option value="4" selected="selected">1/16</option>
      <option value="5">1/32</option>
      <option value="6">1/64</option>
      <option value="7">1/128</option>
      <option value="8">1/4 T</option>
      <option value="9">1/8 T</option>
      <option value="10">1/16 T</option>
      <option value="11">1/32 T</option>
      <option value="12">1/64 T</option>
    </select>
  </div>
  <style>
    #quantizationcontrol{
      opacity: 0.9;
      position: relative;
      top: 10px;
      display: inline-block;
      z-index: 4;
    }
  </style>
</template>

<script>
  (function() {
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var quantizationcontrolPrototype = Object.create(HTMLElement.prototype);

    // tick lengths for the various quantization divisions
    var quant_values = [1920, 960, 480, 240, 120, 60, 30, 15, 320, 160, 80, 40, 20];

    // specify the created callback ("constructor")
    quantizationcontrolPrototype.createdCallback = function() {
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      quant = root.querySelector("#quantization");
      lenQuant = root.querySelector("#length-quantize");
      snapto = root.querySelector("#snapto");

      root.host.addEventListener('denoto-displaysettings', function(){
        var q = event.detail.displaySettings.quantization;
        quant.value = quant_values.indexOf(q);

        var q = event.detail.displaySettings.length_quantization;
        lenQuant.value = quant_values.indexOf(q);
      });

      quant.addEventListener('change', function() {
          // TODO: sanitize inputs
          var input = parseInt(event.srcElement.value);
          var timeEvent = new CustomEvent("denoto-updatequantization", {"detail": {"value": quant_values[input]}});
          document.dispatchEvent(timeEvent);
        });

      lenQuant.addEventListener('change', function() {
          var input = parseInt(event.srcElement.value);
          var quantVal = quant_values[input];
          if (input === 0) {
            quantVal = "insert";
          }
          document.dispatchEvent(new CustomEvent("denoto-updatelengthquantization", {"detail": {"value": quantVal}}));
        });

      snapto.addEventListener('change', 
        function() {
          var timeEvent = new CustomEvent("denoto-snapto", {"detail": {"snapto": snapto.checked}});
          document.dispatchEvent(timeEvent);
        });
    };
  
    // register the element
    var quantizationcontrol = document.registerElement('denoto-quantizationcontrol', {prototype: quantizationcontrolPrototype});
  })();
</script>