<template>
  <div id="tracklist"><div id="rowcover"></div><div id="addbutton"><span class="add_track_text">Add New Track</span></div></div>
  <style>
  #rowcover{
    position: absolute;
    left: 200px;
    height: 80px;
    background: #888888;
    opacity: 0.5;
  }
  #addbutton{
    position: relative;
    top: 5px;
    background: #243544;
    width: 200px;
    height: 60px;
    color: #FFF;
    text-align: center;
    padding-top: 25px;
  }
  #addbutton:hover{
    background: #000000;
    opacity: 0.5;
  }
  .add_track_text {
    opacity: 0.9;
  }
  *{
    padding: 0;
    margin: 0;  
  }
  #tracklist {
    float: left;
    width: 200px;
    padding: 0px;
    position: relative;
  }
  .pianokey {
    padding: 0px;
    margin: 0px;
  }
 </style>
</template>
<link rel="import" href="<%= asset_path("track.html")%>">
<script>
  (function(){
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var tracklistPrototype = Object.create(HTMLElement.prototype);

    // start out with no tracks
    var tracks = 0;
    var root;

    // specify the created callback ("constructor")
    tracklistPrototype.createdCallback = function(){
      root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      root.host.ownerDocument.addEventListener("denoto-addtrack", function(){
        createTrack(this, event.detail.track, event.detail.index);
      });

      root.getElementById("addbutton").addEventListener("mouseup", function(){
        if(event.button === 0){
          var index = rhomb._song.addTrack();
          var track = rhomb._song._tracks[index];

          var trackEvent = new CustomEvent("denoto-addtrack", {"detail": {"index": index, "track": track}});
          document.dispatchEvent(trackEvent);
        }
      });

      root.host.ownerDocument.addEventListener('denoto-deletetrack', function(){
        root.getElementById('tracklist').removeChild(event.detail.div);
        tracks--;
        root.getElementById("addbutton").style.top = (-2 + tracks * 80) + "px";
        root.getElementById("rowcover").style.top = (-7 + tracks * 80) + "px";

        rhomb._song.deleteTrack(event.detail.track.index);

        // use the bottom coordinates of the last track to set the height of the tracklist
        root.host.style.height = (tracks * 80 + 73) + "px";

        var heightEvent = new CustomEvent('denoto-setheights', {"detail": {"height": tracks * 80 + 78}});
        root.host.ownerDocument.dispatchEvent(heightEvent);
      });

      var count = this.getAttribute('trackcount');
      if(count !== null && parseInt(count) > 0){
        createTracks(this, count);
      }
    };

    // specify the "an attribute has changed" callback
    tracklistPrototype.attributeChangedCallback = function(attrName, oldVal, newVal){
      if(attrName === "trackcount"){
        createTracks(this, newVal);
      }
    };

    // helper function to create empty tracks in the shadow div
    function createTracks(that, count){
      var max = parseInt(count);
      var track;

      for(var i = tracks; i < max; i++){
        track = document.createElement('denoto-track');
        track.setAttribute('style', "position: absolute; left: 0px; top: " + (-7 + i * 80) + "px; z-index: 1;");
        that.shadowRoot.getElementById('tracklist').appendChild(track);
      }

      tracks = max;

      // use the bottom coordinates of the last track to set the height of the tracklist
      that.shadowRoot.host.style.height = (parseInt(track.style.top) + 80) + "px";
    }

    // helper function to create empty tracks in the shadow div
    function createTrack(that, track_object, index){
      var track = document.createElement('denoto-track');
      track.setAttribute('style', "position: absolute; left: 0px; top: " + (-7 + tracks * 80) + "px; z-index: 1;");
      track.setAttribute("name", track_object._name);
      track.setAttribute("id", track_object._id);
      track.setAttribute("index", index);

      root.getElementById('tracklist').appendChild(track);

      tracks++;

      root.getElementById("addbutton").style.top = (parseInt(track.style.top) + 85) + "px";
      root.getElementById("rowcover").style.top = (parseInt(track.style.top) + 80) + "px";
      root.getElementById("rowcover").style.width = (parseInt(root.host.ownerDocument.body.clientWidth) - 350) + "px";

      // use the bottom coordinates of the last track to set the height of the tracklist
      root.host.style.height = (parseInt(track.style.top) + 160) + "px";

      var heightEvent = new CustomEvent('denoto-setheights', {"detail": {"height": parseInt(root.host.style.height) + 5}});
      root.host.ownerDocument.dispatchEvent(heightEvent);
    }

    // register the element
    var tracklist = document.registerElement('denoto-tracklist', {prototype: tracklistPrototype});
  })();
</script>