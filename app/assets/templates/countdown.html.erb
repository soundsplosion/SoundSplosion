<template>
		<div id="container" style="display: inline-block;">
			<div>Time Remaining</div>
			<div id="timeremaining">Loading...</div>
		</div>
	<style>
		#container{
			position: relative;
			left: 15px;
			margin-top: 25px;
		}
		*{
			text-align: left;
			opacity: 0.85;
			color: #FFF;
		}
		#timeremaining {
			font-size: 28px;
			opacity: 0.85;
		}

		.yellowwarning {
		    -webkit-animation: yellowflash 3s infinite;
		}

		.redwarning {
		    -webkit-animation: redflash 1s infinite;
		}

		.red {
		    color: red;
		}

		@-webkit-keyframes yellowflash {
		    0% {color: white;}
		    50% {color: yellow;}
		    0% {color: white;}
		}

		@-webkit-keyframes redflash {
		    0% {color: white;}
		    50% {color: red;}
		    0% {color: white;}
		}
	</style>
</template>

<script>
	(function(){
		// get the template for this element
		var template = document.currentScript.ownerDocument.querySelector('template');

		// copy a prototype from HTMLElement
		var countdownPrototype = Object.create(HTMLElement.prototype);

		// declare a persistent reference to the time remaining span and the timer
		var timeremaining;
		var timer;
		var hours;
		var minutes;
		var seconds;

		// declare a persistent reference to the shadowroot (used by updateTimer)
		var root;

		// specify the created callback ("constructor")
		countdownPrototype.createdCallback = function(){
			root = this.createShadowRoot();
			root.appendChild(document.importNode(template.content, true));

			// get the time remaining span
			timeremaining = root.querySelector('#timeremaining');

			// update the timer every second
			updateTimer;
			timer = setInterval(updateTimer, 1000);
		};

		document.addEventListener('denoto-settimeremaining', function(){
			hours = event.detail.hours;
			minutes = event.detail.minutes;
			seconds = event.detail.seconds;
		});

		function updateTimer(){
			// decrement the time left
			if(--seconds < 0){
				seconds = 59;
				minutes--;
			}
			if(minutes < 0){
				minutes = 59;
				hours--;
			}

			// update the display of time remaining
			timeremaining.innerHTML	= hours + ":" + (minutes < 10 ? "0" : "") + minutes + ":"+ (seconds < 10 ? "0" : "") + seconds;


			// go to red warning at 1 minute
			if(hours == 0 && minutes < 1)
				timeremaining.className = "redwarning";
			// go to yellow warning at 3 minutes
			else if(hours == 0 && minutes < 3)
				timeremaining.className = "yellowwarning";

			// throw an event when time has run out
			if(hours === 0 && minutes === 0 && seconds === 0){
				timeremaining.className = "red";
				clearInterval(timer);
				var timeEvent = new CustomEvent("denoto-endcountdown", {"detail": "countdown ended"});
				root.host.dispatchEvent(timeEvent);
			}

		}

		// register the element
		var countdown = document.registerElement('denoto-countdown', {prototype: countdownPrototype});
	})();
</script>