<template>
  <span id="loopcontrol">
    <span id="spacer">Loop start: <denoto-editabletext id="start_measure" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="start_beat" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="start_q_beat" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="start_ticks" type="shortertext" value="0"></denoto-editabletext>
    </span>
    <div class="blocker"></div>

    <span id="spacer">Loop end: <denoto-editabletext id="end_measure" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="end_beat" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="end_q_beat" type="tinytext" value="0" suffix="."></denoto-editabletext>
    <denoto-editabletext id="end_ticks" type="shortertext" value="0"></denoto-editabletext>
    </span>
    <div class="blocker"></div>
  </span>
  <style>
    #loopcontrol {
      opacity: 0.9;
      position: relative;
      top: 10px;
      display: inline-block;
    }
    .blocker{
      display: inline-block;
      width: 8px;
    }
  </style>
</template>
<script src="<%= asset_path("time.js")%>"></script>
<script>
  (function(){
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var loopcontrolPrototype = Object.create(HTMLElement.prototype);

    // specify the created callback ("constructor")
    loopcontrolPrototype.createdCallback = function(){
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      // get references to the fields
      var start_measure = root.querySelector('#start_measure');
      var start_beat = root.querySelector('#start_beat');
      var start_q_beat = root.querySelector('#start_q_beat');
      var start_ticks = root.querySelector('#start_ticks');

      var end_measure = root.querySelector('#end_measure');
      var end_beat = root.querySelector('#end_beat');
      var end_q_beat = root.querySelector('#end_q_beat');
      var end_ticks = root.querySelector('#end_ticks');

      var loopstart = new Clock(start_measure, start_beat, start_q_beat, start_ticks);
      var loopend = new Clock(end_measure, end_beat, end_q_beat, end_ticks);

      loopstart.setTicks(0);
      loopstart.value = loopstart.getTicks();
      loopend.setTicks(1920);
      loopend.value = loopend.getTicks();

      var oldstart = loopstart.value;
      var oldend = loopend.value;

      // make the buttons react when clicked on
      start_measure.addEventListener('keyup', handleKeyUpStart);
      start_beat.addEventListener('keyup', handleKeyUpStart);
      start_q_beat.addEventListener('keyup', handleKeyUpStart);
      start_ticks.addEventListener('keyup', handleKeyUpStart);

      end_measure.addEventListener('keyup', handleKeyUpEnd);
      end_beat.addEventListener('keyup', handleKeyUpEnd);
      end_q_beat.addEventListener('keyup', handleKeyUpEnd);
      end_ticks.addEventListener('keyup', handleKeyUpEnd);
      
      function handleKeyUpStart(){
        var start = loopstart.getTicks();
        var end = loopend.getTicks();

        if (start < 0) {
          loopstart.setTicks(0);
          start = 0;
        }

        if(event.keyCode == 13 && start >= 0 && start < end && (end - start) >= 1) {
          console.log("[LoopControl] Updating loop start to " + start);
          var keyEvent = new CustomEvent("denoto-updateloopstart", {"detail": {"start": start}});

          // dispatch to the document
          root.host.dispatchEvent(keyEvent);
          document.dispatchEvent(keyEvent);

          // this looks weird, but it's just reformatting (e.g. 1920 ticks gets changed to +1 measure)
          loopstart.setTicks(loopstart.getTicks());

          oldstart = loopstart.getTicks();
        } else {
          loopstart.setTicks(oldstart);
        }
      }
      
      function handleKeyUpEnd(){
        var start = loopstart.getTicks();
        var end = loopend.getTicks();

        if(event.keyCode == 13 && start >= 0 && start < end && (end - start) >= 1) {
          console.log("[LoopControl] Updating loop end to " + end);
          var keyEvent = new CustomEvent("denoto-updateloopend", {"detail": {"end": end}});

          // dispatch to the document
          root.host.dispatchEvent(keyEvent);
          document.dispatchEvent(keyEvent);

          // this looks weird, but it's just reformatting (e.g. 1920 ticks gets changed to +1 measure)
          loopend.setTicks(loopend.getTicks());

          oldend = loopend.getTicks();
        } else {
          loopend.setTicks(oldend);
        }
      }

      document.addEventListener('denoto-updateloopstart',
        function(){
          loopstart.setTicks(event.detail.start);
          oldstart = loopstart.getTicks();
        });

      document.addEventListener('denoto-updateloopend',
        function(){
          loopend.setTicks(event.detail.end);
          oldend = loopend.getTicks();
        });
    };

    // register the element
    var loopcontrol = document.registerElement('denoto-loopcontrol', {prototype: loopcontrolPrototype});
  })();
</script>