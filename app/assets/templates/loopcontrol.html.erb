<template>
  <span id="loopcontrol"> 
    Loop start: <denoto-editabletext id="loopstart" type="shorttext" value="1" width="15"></denoto-editabletext>
    Loop end: <denoto-editabletext id="loopend" type="shorttext" value="5" width="15"></denoto-editabletext>
  </span>
  <div id="spacer"></div>
  <style>
    #loopcontrol {
      opacity: 0.9;
      position: relative;
      top: 10px;
      display: inline-block;
    }
    #spacer{
      display: none;
    }
  </style>
</template>

<script>
  (function(){
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var loopcontrolPrototype = Object.create(HTMLElement.prototype);

    // specify the created callback ("constructor")
    loopcontrolPrototype.createdCallback = function(){
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      // get references to the transport bar's buttons
      var loopstart = root.querySelector('#loopstart');
      var loopend = root.querySelector('#loopend');

      loopstart.value = 1;
      loopend.value = 5;

      var oldstart = loopstart.value;
      var oldend = loopend.value;

      // make the buttons react when clicked on
      loopstart.addEventListener('keyup', 
        function(){

          var start = parseInt(loopstart.value);
          var end = parseInt(loopend.value);

          if (start < 1) {
            loopstart.setAttribute("value", 1);
            start = 1;
          }

          if(event.keyCode == 13 && start > 0 && start < end && (end - start) >= 1) {
            console.log("[LoopControl] Updating loop start to " + (start - 1) * 480);
            var keyEvent = new CustomEvent("denoto-updateloopstart", {"detail": {"start": (start - 1) * 480}});
            // dispatch to the document
            root.host.dispatchEvent(keyEvent);
            document.dispatchEvent(keyEvent);
            oldstart = loopstart.value;
          } else {
            loopstart.setAttribute("value", oldstart);
          }
        });

      loopend.addEventListener('keyup', 
        function(){

          var start = parseInt(loopstart.value);
          var end = parseInt(loopend.value);

          if(event.keyCode == 13 && start > 0 && start < end && (end - start) >= 1) {            
            console.log("[LoopControl] Updating loop end to " + (end - 1) * 480);
            var keyEvent = new CustomEvent("denoto-updateloopend", {"detail": {"end": (end - 1) * 480}});
            // dispatch to the document
            root.host.dispatchEvent(keyEvent);
            document.dispatchEvent(keyEvent);
            oldend = loopend.value;
          } else {
            loopend.setAttribute("value", oldend);
          }
        });

      document.addEventListener('denoto-updateloopstart',
        function(){
          loopstart.setAttribute("value", 1 + (event.detail.start / 480));
          oldstart = event.detail.start / 480;
        });

      document.addEventListener('denoto-updateloopend',
        function(){
          loopend.setAttribute("value", 1 + (event.detail.end / 480));
          oldend = event.detail.end / 480;
        });

      document.getElementById("transportbar").addEventListener("denoto-loopToggle",
        function(){
          var control = root.querySelector("#loopcontrol");
          var spacer = root.querySelector("#spacer");
          
          // no longer make control disappear when loops are not enabled
          /*if(control.style.display === "inline"){
            control.style.display = "none";
            spacer.style.display = "inline-block";
          }
          else
          {
            control.style.display = "inline";
            spacer.style.display = "none";
          }*/
        });
    };

    // register the element
    var loopcontrol = document.registerElement('denoto-loopcontrol', {prototype: loopcontrolPrototype});
  })();
</script>