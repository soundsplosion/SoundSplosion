<template>
  <span id="loopcontrol">
    <span id="spacer"><denoto-editableclock id="start" value="1" isposition="true" caption="Loop start: "></denoto-editableclock>
    </span>
    <div class="blocker"></div>

    <span id="spacer"><denoto-editableclock id="end" value="2" isposition="true" caption="Loop end: "></denoto-editableclock>
    </span>
    <div class="blocker"></div>
  </span>
  <style>
    #loopcontrol {
      opacity: 0.9;
      position: relative;
      top: 10px;
      display: inline-block;
    }
    .blocker{
      display: inline-block;
      width: 8px;
    }
  </style>
</template>
<script src="<%= asset_path("time.js")%>"></script>
<script>
  (function() {
    // get the template for this element
    var template = document.currentScript.ownerDocument.querySelector('template');

    // copy a prototype from HTMLElement
    var loopcontrolPrototype = Object.create(HTMLElement.prototype);

    // specify the created callback ("constructor")
    loopcontrolPrototype.createdCallback = function() {
      var root = this.createShadowRoot();
      root.appendChild(document.importNode(template.content, true));

      // get references to the fields
      var loopstart = root.getElementById("start");
      var loopend = root.getElementById("end");

      var oldstart = loopstart.value;
      var oldend = loopend.value;
      
      loopstart.addEventListener('editableclock-changed', handleStart);
      loopend.addEventListener('editableclock-changed', handleEnd);

      function handleStart() {
        console.log("handleStart called. start: " + loopstart.value + ", end: " + loopend.value);
        var start = loopstart.value;
        var end = loopend.value;

        if (start < 0) {
          loopstart.setTicks(0);
          start = 0;
        }

        if (start >= 0 && start < end && (end - start) >= 1) {
          console.log("[LoopControl] Updating loop start to " + start);
          var keyEvent = new CustomEvent("denoto-updateloopstart", {"detail": {"start": start}});

          // dispatch to the document
          root.host.dispatchEvent(keyEvent);
          document.dispatchEvent(keyEvent);

          oldstart = loopstart.value;
        } else {
          loopstart.setAttribute("value", oldstart);
        }
      }
      
      function handleEnd() {
        console.log("handleEnd called. start: " + loopstart.value + ", end: " + loopend.value);
        var start = loopstart.value;
        var end = loopend.value;

        if (start >= 0 && start < end && (end - start) >= 1) {
          console.log("[LoopControl] Updating loop end to " + end);
          var keyEvent = new CustomEvent("denoto-updateloopend", {"detail": {"end": end}});

          // dispatch to the document
          root.host.dispatchEvent(keyEvent);
          document.dispatchEvent(keyEvent);

          oldend = loopend.value;
        } else {
          loopend.setAttribute("value", oldend);
        }
      }

      document.addEventListener('denoto-updateloopstart',
        function() {
          loopstart.setAttribute("value", event.detail.start);
          oldstart = loopstart.value;
        });

      document.addEventListener('denoto-updateloopend',
        function() {
          loopend.setAttribute("value", event.detail.end);
          oldend = loopend.value;
        });
    };

    // register the element
    var loopcontrol = document.registerElement('denoto-loopcontrol', {prototype: loopcontrolPrototype});
  })();
</script>