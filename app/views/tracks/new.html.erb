<head>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <link rel="import" href="<%= asset_path("keyboard.html")%>">
  <link rel="import" href="<%= asset_path("blackkey.html")%>">
  <link rel="import" href="<%= asset_path("whitekey.html")%>">
  <link rel="import" href="<%= asset_path("pianoroll.html")%>">
  <link rel="import" href="<%= asset_path("transport.html")%>">
  <link rel="import" href="<%= asset_path("countdown.html")%>">
</head>
<style type="text/css">
  body{
    font-family: 'Oswald', sans-serif;
  }
  #top-bar{
    background: #448;
    width: 100%;
  }
  denoto-transportbar{
    margin-left: auto;
    margin-right: auto;
    width: 30%;
  }
  denoto-countdown{
    margin-left: auto;
    margin-right: auto;
    width: 30%; 
  }
</style>

<div id="top-bar">
  <denoto-transportbar id="transportbar"></denoto-transportbar>
  <denoto-countdown id="countdowntimer"></denoto-countdown>
</div>
<div id="midi-interface">
  <denoto-keyboard id="appkeyboard" keycount="24"></denoto-keyboard>
  <denoto-pianoroll id="apppianoroll"></denoto-pianoroll>
</div>

<%= render 'form' %>
<%= link_to 'Back', tracks_path %>

<script>
  var rhomb = new Rhombus();
  var track = {};
  var notes = [];
  var lastKeypressed = 0;

  // keyboard events
  document.getElementById("appkeyboard").addEventListener("denoto-keydown", function(e){ 
    rhomb.startPreviewNote(e.detail.keyvalue); 

    // write to track json
    var note = {};
    note._pitch = e.detail.keyvalue;
    note._start = lastKeypressed;
    lastKeypressed += 200;
    note._length = 500;
    notes[notes.length] = note;
  });

  document.getElementById("appkeyboard").addEventListener("denoto-keyup", function(e){ rhomb.stopPreviewNote(e.detail.keyvalue); });
  
  // piano roll events
  document.getElementById("apppianoroll").addEventListener("denoto-writenote", function(e){ console.log("[PianoRoll] Writing pitch " + e.detail.note._pitch + ", start: " + e.detail.note._start + ", length: " + e.detail.note._length); });
  document.getElementById("apppianoroll").addEventListener("denoto-erasenote", function(e){ console.log("[PianoRoll] Erasing pitch " + e.detail.note._pitch + ", start: " + e.detail.note._start + ", length: " + e.detail.note._length); });

  // transport bar events
  document.getElementById("transportbar").addEventListener("denoto-rewind", 
    function(e){ 
      console.log("[TransportBar] Rewind pressed");
      rhomb.moveToPositionTicks(0);
    });
  
  document.getElementById("transportbar").addEventListener("denoto-play", 
    function(e){ 
      console.log("[TransportBar] Play pressed");
      rhomb.startPlayback();
    });
  
  document.getElementById("transportbar").addEventListener("denoto-pause", 
    function(e){ 
      console.log("[TransportBar] Pause pressed");
      rhomb.stopPlayback();
    });
  
  document.getElementById("transportbar").addEventListener("denoto-stop",
     function(e){ 
      console.log("[TransportBar] Stop pressed");
      rhomb.stopPlayback();
      rhomb.moveToPositionTicks(rhomb.getLoopStart());
    });
  
  document.getElementById("transportbar").addEventListener("denoto-fastfwd", function(e){ console.log("[TransportBar] Fastfwd pressed") });

  document.getElementById("transportbar").addEventListener("denoto-loopToggle",
     function(e){ 
      console.log("[TransportBar] Loop pressed");
      rhomb.setLoopEnabled(!rhomb.getLoopEnabled());
      console.log("loopEnabled = " + rhomb.getLoopEnabled());
    });

  // countdown timer events
  document.getElementById("countdowntimer").addEventListener("denoto-endcountdown", function(e){ console.log("[CountdownTimer] Out of time!") });

  function uploadFile(){
    track["notes"] = notes;
    $.ajax({
      type:'GET',
      url:'/upload/new',
      data: { track_data: JSON.stringify(track), track_title: document.getElementById("track_title").value}
    });
  }
</script>