getPlayerElement("div", "comment", "<%= track.id %>").click(function() {
  var commentBox = getPlayerElement("div", "commentBox", "<%= track.id %>");
  if (commentBox.html().length == 0) {
    commentBox.css("display", "block");
    commentBox.append("<%= escape_javascript(render(:partial => 'tracks/track_comment', :locals => { :track => track })) %>");
  } 
  else {
    commentBox.html("");
  }
});

getPlayerElement("div", "info", "<%= track.id %>").click(function() {
  if (getPlayerElement("div", "infoBox", "<%= track.id %>").html().length == 0) {
    getPlayerElement("div", "infoBox", "<%= track.id %>").append("<%= escape_javascript(render(:partial => 'tracks/track_graph', :locals => { :track => track })) %>");
  } 
  else {
    getPlayerElement("div", "infoBox", "<%= track.id %>").html("");
  }
});

getPlayerElement("div", "unlike", "<%= track.id %>").on('click', function() {
    var destroyParams = {
      "authenticity_token": "<%= form_authenticity_token %>",
      "track_id": "<%= track.id %>"
    };
    $.ajax({
      type: "DELETE",
      url: "/like",
      data: destroyParams,
      success: function (result, text) {
        if (window.location.href.indexOf("/user/") > -1) {
           $("#track_cell_<%= track.id %>").remove();
           var like_btn = $("#liked_tracks_btn").html();
           var newCount = parseInt(like_btn.substring(0, like_btn.indexOf(" "))) - 1;
           $("#liked_tracks_btn").html(newCount + " Likes");
         } 
        jQuery.gritter.add({time:1000, title:result, text:'is unliked'});
      },
      error: function (request, status, error) {
	      console.log("Unable to unlike");
      }
    });
});

getPlayerElement("div", "delete", "<%= track.id %>").on('click', function() {

    var dialogEvent = new CustomEvent("denoto-dialogbox", {"detail": {
        type: "okcancel",
        caption: "Delete the song?",
        message: "This will permanently delete the track from the server.",
        okButton: "Yes, delete it!",
        okHandler: deleteSong,
        cancelButton: "No, keep it.",
        cancelHandler: function(){},
        inescapable: false,
        htmlNode: undefined
      }}
    );

    document.dispatchEvent(dialogEvent);

    function deleteSong(){
      var destroyParams = {
        "authenticity_token": "<%= form_authenticity_token %>",
        "id": "<%= track.id %>"
      };
      $.ajax({
        type: "DELETE",
        url: "/tracks",
        data: destroyParams,
        success: function (result, text) {
          $("#track_cell_<%= track.id %>").remove();
          jQuery.gritter.add({time:1000, title:result, text: 'has been deleted.'});
        },
        error: function (request, status, error) {
          jQuery.gritter.add({time:1000, title:result, text: 'cannot be deleted.'});
        }
      });
    }
});

getPlayerElement("div", "like", "<%= track.id %>").on('click', function() {
    <% if !current_user %>
      window.location.replace("/users/sign_in");
    <% end %>
    var likeParams = {
      "track_id": "<%= track.id %>",
      "authenticity_token": "<%= form_authenticity_token %>"
    };

    $.ajax({
      type: "POST",
      url: "/like",
      data: likeParams,
      success: function (result, text) {
        jQuery.gritter.add({time:1000, title:result, text:'is saved to your likes'});
      },
      error: function (request, status, error) {
        jQuery.gritter.add({time:1000, title:result, text:'is already in your likes'});
      }
    });
});

getPlayerElement("div", "unfavorite", "<%= track.id %>").on('click', function() {
    var destroyParams = {
      "authenticity_token": "<%= form_authenticity_token %>",
      "track_id": "<%= track.id %>"
    };
    $.ajax({
      type: "DELETE",
      url: "/favorite",
      data: destroyParams,
      success: function (result, text) {
        if (window.location.href.indexOf("/user/") > -1) {
           $("#track_cell_<%= track.id %>").remove();
           var fav_btn = $("#favorited_tracks_btn").html();
           var newCount = parseInt(fav_btn.substring(0, fav_btn.indexOf(" "))) - 1;
           $("#favorited_tracks_btn").html(newCount + " Favorites");
         } 
        jQuery.gritter.add({time:1000, title:result, text:'is unfavorited'});
      },
      error: function (request, status, error) {
	console.log("Unable to unfavorite");
      }
    });
});
getPlayerElement("div", "favorite", "<%= track.id %>").click(function() {
    <% if !current_user %>
      window.location.replace("/users/sign_in");
    <% end %>

    var favoriteParams = {
      "track_id": "<%= track.id %>",
      "authenticity_token": "<%= form_authenticity_token %>"
    };
    
    $.ajax({
      type: "POST",
      url: "/favorite",
      data: favoriteParams,
      success: function (result, text) {
        jQuery.gritter.add({time: 1000, title: result, text: 'is saved to your favorites'});
      },
      error: function (request, status, error) {
        console.log("Unable to favorite");
      }
    });
});

// Create a slider for a track
getPlayerElement("div", "slider", "<%= track.id %>").slider({
  min: 0,
  max: 100,
  value: 50,
  animate: true,
  range: 'min',
  slide: function(event, ui) {
    window["denoto_rhomb"].getMaster().normalizedSetByName("gain", 0.5 * ui.value/100);
  }
});

$.ajax({
  url: "/uploads/" + "<%= track.id %>",
  async: false,
  dataType: 'JSON',
  success: function(data) {
    window["denoto_rhomb"].importSong(JSON.stringify(data));
    window["denoto_rhomb"].setLoopStart(0);
    window["denoto_rhomb"].setLoopEnd( window["denoto_rhomb"].getSong().getLength());
    window["denoto_rhomb"].Undo._clearUndoStack();

    // Set track duration
    var duration = window["denoto_rhomb"].getSongLengthSeconds();
    getPlayerElement("div", "duration", "<%= track.id %>").html(formatTime(duration));
  },
  error: function (request, status, error) {
      console.log(request);
      console.log(status);
      console.log(error);
  }
});

function updatePlayCount(id) {
  var trackPlayParams = {
      "track_id": id,
      "authenticity_token": "<%= form_authenticity_token %>"
    };

    $.ajax({
      type: "POST",
      url: "/track_play",
      data: trackPlayParams
    });
}

function closeInfo(id) {
  getPlayerElement("div", "infoBox", id).html("");
}
