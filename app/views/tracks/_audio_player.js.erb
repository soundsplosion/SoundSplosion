getPlayerElement("div", "comment", "<%= track.id %>").click(function() {
  if (getPlayerElement("div", "commentBox", "<%= track.id %>").html().length == 0) {
    getPlayerElement("div", "commentBox", "<%= track.id %>").append("<%= escape_javascript(render(:partial => 'tracks/track_comment', :locals => { :track => track })) %>");
  } 
  else {
    getPlayerElement("div", "commentBox", "<%= track.id %>").html("");
  }
});

getPlayerElement("button", "closeComment", "<%= track.id %>").click(function() {
    getPlayerElement("div", "commentBox", "<%= track.id %>").html("");
});

getPlayerElement("div", "info", "<%= track.id %>").click(function() {
  if (getPlayerElement("div", "infoBox", "<%= track.id %>").html().length == 0) {
    getPlayerElement("div", "infoBox", "<%= track.id %>").append("<%= escape_javascript(render(:partial => 'tracks/track_graph', :locals => { :track => track })) %>");
  } 
  else {
    getPlayerElement("div", "infoBox", "<%= track.id %>").html("");
  }
});

getPlayerElement("div", "unlike", "<%= track.id %>").on('click', function() {
    var destroyParams = {
      "authenticity_token": "<%= form_authenticity_token %>",
      "track_id": "<%= track.id %>"
    };
    $.ajax({
      type: "DELETE",
      url: "/like",
      data: destroyParams,
      success: function (result, text) {
        if (window.location.href.indexOf("/user/") > -1) {
           $("#track_cell_<%= track.id %>").remove();
           var like_btn = $("#liked_tracks_btn").html();
           var newCount = parseInt(like_btn.substring(0, like_btn.indexOf(" "))) - 1;
           $("#liked_tracks_btn").html(newCount + " Likes");
         } 
        jQuery.gritter.add({time:1000, title:result, text:'is unliked'});
      },
      error: function (request, status, error) {
	console.log("Unable to unlike");
      }
    });
});

getPlayerElement("div", "like", "<%= track.id %>").on('click', function() {
    <% if !current_user %>
      window.location.replace("/users/sign_in");
    <% end %>
    var likeParams = {
      "track_id": "<%= track.id %>",
      "authenticity_token": "<%= form_authenticity_token %>"
    };

    $.ajax({
      type: "POST",
      url: "/like",
      data: likeParams,
      success: function (result, text) {
        jQuery.gritter.add({time:1000, title:result, text:'is saved to your likes'});
      },
      error: function (request, status, error) {
        jQuery.gritter.add({time:1000, title:result, text:'is already in your likes'});
      }
    });
});

getPlayerElement("div", "unfavorite", "<%= track.id %>").on('click', function() {
    var destroyParams = {
      "authenticity_token": "<%= form_authenticity_token %>",
      "track_id": "<%= track.id %>"
    };
    $.ajax({
      type: "DELETE",
      url: "/favorite",
      data: destroyParams,
      success: function (result, text) {
        if (window.location.href.indexOf("/user/") > -1) {
           $("#track_cell_<%= track.id %>").remove();
           var fav_btn = $("#favorited_tracks_btn").html();
           var newCount = parseInt(fav_btn.substring(0, fav_btn.indexOf(" "))) - 1;
           $("#favorited_tracks_btn").html(newCount + " Favorites");
         } 
        jQuery.gritter.add({time:1000, title:result, text:'is unfavorited'});
      },
      error: function (request, status, error) {
	console.log("Unable to unfavorite");
      }
    });
});
getPlayerElement("div", "favorite", "<%= track.id %>").click(function() {
    <% if !current_user %>
      window.location.replace("/users/sign_in");
    <% end %>

    var favoriteParams = {
      "track_id": "<%= track.id %>",
      "authenticity_token": "<%= form_authenticity_token %>"
    };
    
    $.ajax({
      type: "POST",
      url: "/favorite",
      data: favoriteParams,
      success: function (result, text) {
        jQuery.gritter.add({time: 1000, title: result, text: 'is saved to your favorites'});
      },
      error: function (request, status, error) {
        console.log("Unable to favorite");
      }
    });
});

getPlayerElement("button", "addComment", "<%= track.id %>").click(function() {
  <%= render 'tracks/create_comment.html.erb', track: track %>
});

getPlayerElement("input", "commentBody", "<%= track.id %>").on("keypress", function(e) {
  console.log(e);
  if (e.keyCode == 13) {
    <%= render 'tracks/create_comment.html.erb', track: track %>
  }
});
// Create a slider for a track
getPlayerElement("div", "slider", "<%= track.id %>").slider({
  min: 0,
  max: 100,
  value: 50,
  animate: true,
  range: 'min',
  slide: function(event, ui) {
    window["rhom-" + "<%= track.id %>"].getMaster().normalizedSetByName("gain", 0.5 * ui.value/100);
  }
});

// Create a rhombus object with a track data on the server
$.ajax({
  url: "/uploads/" + "<%= track.id %>",
  async: false,
  dataType: 'JSON',
  success: function(data) {
    window["rhom-" + "<%= track.id %>"] = new DenotoRhombus();
    window["rhom-" + "<%= track.id %>"].importSong(JSON.stringify(data));
  },
  error: function (request, status, error) {
      console.log(request);
      console.log(status);
      console.log(error);
  }
});

// Set track duration
var duration = window["rhom-" + "<%= track.id %>"].getSongLengthSeconds();
getPlayerElement("div", "duration", "<%= track.id %>").html(formatTime(duration));

var timer = setInterval(function() {
  // Update track current time
  var time = window["rhom-" + "<%= track.id %>"].getPosition();
  getPlayerElement("div", "currentTime", "<%= track.id %>").html(formatTime(time));

  // Update track progress bar
  getPlayerElement("a", "progress", "<%= track.id %>").css("left", getTrackProgress(time, window["rhom-" + "<%= track.id %>"].getSongLengthSeconds()));

  // Clean up after the song finishes
  if(songFinished(time, window["rhom-" + "<%= track.id %>"].getSongLengthSeconds())) {
    stopClicked("<%= track.id %>");
    getPlayerElement("div", "currentTime", "<%= track.id %>").html("00:00");
  }
}, 1000);

function updatePlayCount(id) {
  var trackPlayParams = {
      "track_id": id,
      "authenticity_token": "<%= form_authenticity_token %>"
    };

    $.ajax({
      type: "POST",
      url: "/track_play",
      data: trackPlayParams
    });
}

function closeInfo(id) {
  getPlayerElement("div", "infoBox", id).html("");
}
